# frozen_string_literal: true

# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Auto-generated by gapic-generator-ruby. DO NOT EDIT!

require "bundler/setup"

require "rubocop/rake_task"
RuboCop::RakeTask.new

env_redirect = ENV["ACTOOLS_ENTRYPOINT_DIR"]
puts "ACTOOLS_ENTRYPOINT_DIR = #{env_redirect}"

require "rake/testtask"
desc "Run tests."
Rake::TestTask.new do |t|
  t.libs << "#{env_redirect}/lib"
  t.libs << "#{env_redirect}/test"
  t.test_files = FileList["#{env_redirect}/test/**/*_test.rb"]
  t.warning = false
end

namespace :test do
  desc "Runs tests with coverage."
  task :coverage do
    require "simplecov"
    SimpleCov.start do
      command_name "google-cloud-language-v1"
      track_files "lib/**/*.rb"
      add_filter "test/"
    end

    Rake::Task[:test].invoke
  end
end

require "yard"
require "yard/rake/yardoc_task"
YARD::Rake::YardocTask.new do |y|
  y.options << "--fail-on-warning"
end

desc "Run yard-doctest example tests."
task :doctest do
  puts "The google-cloud-language-v1 gem does not have doctest tests."
end

task :cloudrad do
  ENV["CLOUDRAD_GEM_NAME"] = "google-cloud-language-v1"
  sh "bundle exec yard doc --fail-on-warning --yardopts .yardopts-cloudrad"
end

desc "Run the CI build"
task :ci do
  header "BUILDING google-cloud-language-v1"
  header "google-cloud-language-v1 rubocop", "*"
  Rake::Task[:rubocop].invoke
  header "google-cloud-language-v1 yard", "*"
  Rake::Task[:yard].invoke
  header "google-cloud-language-v1 test", "*"
  Rake::Task[:test].invoke
end

task default: :test

def header str, token = "#"
  line_length = str.length + 8
  puts ""
  puts token * line_length
  puts "#{token * 3} #{str} #{token * 3}"
  puts token * line_length
  puts ""
end
