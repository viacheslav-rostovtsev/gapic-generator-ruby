# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""
Defines the targets for the google cloud language library to be built
with gapic-generator-ruby cloud flavor
"""
load("@gapic_generator_ruby//rules_ruby_gapic:ruby_gapic.bzl", 
  "ruby_cloud_gapic_library",
  "ruby_proto_library",
  "ruby_grpc_library")

load("@gapic_generator_ruby//rules_ruby_gapic:ruby_gapic_pkg.bzl", 
  "ruby_gapic_assembly_pkg")

load("@rules_gapic//:gapic.bzl", "proto_library_with_info")

# Remove this section when the monolith rule deps are
# out of googleapis.
proto_library_with_info(
    name = "language_proto_with_info",
    deps = [
        "@com_google_googleapis//google/cloud/language/v1:language_proto",
        "@com_google_googleapis//google/cloud:common_resources_proto",
    ],
)

##
# completed google-cloud language library combined from
# * protoc ruby output
# * grpc-ruby protoc plugin output
# * gapic-generator-ruby cloud flavor output
#
ruby_gapic_assembly_pkg(
  name = "google-cloud-language-v1-ruby",
  deps = [
    ":language_ruby_gapic",
    ":language_ruby_grpc",
    ":language_ruby_proto",
  ],
)

##
# just the gapic-generator-ruby cloud flavor output
#
ruby_cloud_gapic_library(
  name = "language_ruby_gapic",
  srcs = [":language_proto_with_info"],
  ruby_cloud_title="Natural Language V1",
  ruby_cloud_description="Provides natural language understanding technologies, such as sentiment analysis, entity recognition, entity sentiment analysis, and other text annotations.",
  extra_protoc_parameters = [
    "ruby-cloud-gem-name=google-cloud-language-v1",
    "ruby-cloud-env-prefix=LANGUAGE",
    "ruby-cloud-product-url=https://cloud.google.com/natural-language",
    "ruby-cloud-api-id=language.googleapis.com",
    "ruby-cloud-api-shortname=language",
  ],
  # we have to have a local copy here since @com_google_googleapis does not export individual grpc configs
  grpc_service_config = ":language_grpc_service_config.json"
)

##
# just the protoc ruby output
#
ruby_proto_library(
  name = "language_ruby_proto",
  deps = ["@com_google_googleapis//google/cloud/language/v1:language_proto"],
)

##
# just the grpc-ruby protoc plugin output
#
ruby_grpc_library(
  name = "language_ruby_grpc",
  srcs = ["@com_google_googleapis//google/cloud/language/v1:language_proto"],
  deps = [":language_ruby_proto"],
)

#-= Translate V3 =----------------------------------------------------------------
ruby_proto_library(
    name = "translation_ruby_proto",
    deps = [
      "@com_google_googleapis//google/cloud/translate/v3:translation_proto",
    ],
)

ruby_grpc_library(
    name = "translation_ruby_grpc",
    srcs = ["@com_google_googleapis//google/cloud/translate/v3:translation_proto"],
    deps = [":translation_ruby_proto"],
)

ruby_cloud_gapic_library(
    name = "translation_ruby_gapic",
    srcs = ["@com_google_googleapis//google/cloud/translate/v3:translation_proto_with_info"],
    extra_protoc_parameters = [
        "ruby-cloud-api-id=translate.googleapis.com",
        "ruby-cloud-api-shortname=translate",
        "ruby-cloud-env-prefix=TRANSLATE",
        "ruby-cloud-gem-name=google-cloud-translate-v3",
        "ruby-cloud-product-url=https://cloud.google.com/translate",
        "ruby-cloud-generate-transports=grpc;rest",
    ],
    grpc_service_config = "translate_grpc_service_config.json",
    service_yaml = "translate_v3.yaml",
    rest_numeric_enums = False,
    ruby_cloud_description = "Cloud Translation can dynamically translate text between thousands of language pairs. Translation lets websites and programs programmatically integrate with the translation service.",
    ruby_cloud_title = "Cloud Translation V3",
    deps = [
        ":translation_ruby_grpc",
        ":translation_ruby_proto",
    ],
)

ruby_gapic_assembly_pkg(
    name = "google-cloud-translation-v3-ruby",
    deps = [
        ":translation_ruby_gapic",
        ":translation_ruby_grpc",
        ":translation_ruby_proto",
    ],
)

#-= Speech V1 =----------------------------------------------------------------
ruby_proto_library(
    name = "speech_ruby_proto",
    deps = [
      "@com_google_googleapis//google/cloud/speech/v1:speech_proto",
    ],
)

ruby_grpc_library(
    name = "speech_ruby_grpc",
    srcs = ["@com_google_googleapis//google/cloud/speech/v1:speech_proto"],
    deps = [":speech_ruby_proto"],
)

ruby_cloud_gapic_library(
    name = "speech_ruby_gapic",
    srcs = ["@com_google_googleapis//google/cloud/speech/v1:speech_proto_with_info"],
    extra_protoc_parameters = [
        "ruby-cloud-api-id=speech.googleapis.com",
        "ruby-cloud-api-shortname=speech",
        "ruby-cloud-env-prefix=SPEECH",
        "ruby-cloud-gem-name=google-cloud-speech-v1",
        "ruby-cloud-product-url=https://cloud.google.com/speech-to-text",
        "ruby-cloud-generate-transports=grpc;rest",
    ],
    grpc_service_config = "speech_grpc_service_config.json",
    service_yaml = "speech_v1.yaml",
    rest_numeric_enums = True,
    ruby_cloud_description = "Google Speech-to-Text enables developers to convert audio to text by applying powerful neural network models in an easy-to-use API. The API recognizes more than 120 languages and variants to support your global user base. You can enable voice command-and-control, transcribe audio from call centers, and more. It can process real-time streaming or prerecorded audio, using Google's machine learning technology.",
    ruby_cloud_title = "Cloud Speech-to-Text V1",
    deps = [
        ":speech_ruby_grpc",
        ":speech_ruby_proto",
    ],
)

ruby_gapic_assembly_pkg(
    name = "google-cloud-speech-v1-ruby",
    deps = [
        ":speech_ruby_gapic",
        ":speech_ruby_grpc",
        ":speech_ruby_proto",
    ],
)

#-= Location =----------------------------------------------------------------
ruby_proto_library(
    name = "location_ruby_proto",
    deps = ["@com_google_googleapis//google/cloud/location:location_proto"],
)
ruby_grpc_library(
    name = "location_ruby_grpc",
    srcs = ["@com_google_googleapis//google/cloud/location:location_proto"],
    deps = [":location_ruby_proto"],
)
ruby_cloud_gapic_library(
    name = "location_ruby_gapic",
    srcs = ["@com_google_googleapis//google/cloud/location:location_proto_with_info"],
    extra_protoc_parameters = [
        "ruby-cloud-gem-name=google-cloud-location",
        "ruby-cloud-generate-transports=grpc;rest",
    ],
    rest_numeric_enums = False,
    ruby_cloud_description = "An add-on interface used by some Google API clients to provide location management calls.",
    ruby_cloud_title = "Locations",
    deps = [
        ":location_ruby_grpc",
        ":location_ruby_proto",
    ],
)

# Open Source Packages
ruby_gapic_assembly_pkg(
    name = "google-cloud-location-ruby",
    deps = [
        ":location_ruby_gapic",
        ":location_ruby_grpc",
        ":location_ruby_proto",
    ],
)