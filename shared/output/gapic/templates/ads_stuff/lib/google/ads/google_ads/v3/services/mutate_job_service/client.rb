# frozen_string_literal: true

# The MIT License (MIT)
#
# Copyright <YEAR> <COPYRIGHT HOLDER>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

# Auto-generated by gapic-generator-ruby. DO NOT EDIT!

require "gapic/common"
require "gapic/config"
require "gapic/config/method"

require "testing/ads_stuff/version"
require "google/ads/googleads/v3/services/mutate_job_service_pb"
require "google/ads/google_ads/v3/services/mutate_job_service/credentials"
require "google/ads/google_ads/v3/services/mutate_job_service/paths"
require "google/ads/google_ads/v3/services/mutate_job_service/operations"


module Google
  module Ads
    module GoogleAds
      module V3
        module Services
          module MutateJobService
            # Service that implements MutateJobService API.
            class Client
              include Paths

              # @private
              attr_reader :mutate_job_service_stub

              ##
              # Configure the MutateJobService Client class.
              #
              # See {Google::Ads::GoogleAds::V3::Services::MutateJobService::Client::Configuration}
              # for a description of the configuration fields.
              #
              # ## Example
              #
              # To modify the configuration for all MutateJobService clients:
              #
              #     Google::Ads::GoogleAds::V3::Services::MutateJobService::Client.configure do |config|
              #       config.timeout = 10_000
              #     end
              #
              # @yield [config] Configure the Client client.
              # @yieldparam config [Client::Configuration]
              #
              # @return [Client::Configuration]
              #
              def self.configure
                @configure ||= begin
                  default_config = Client::Configuration.new

                  default_config
                end
                yield @configure if block_given?
                @configure
              end

              ##
              # Configure the MutateJobService Client instance.
              #
              # The configuration is set to the derived mode, meaning that values can be changed,
              # but structural changes (adding new fields, etc.) are not allowed. Structural changes
              # should be made on {Client.configure}.
              #
              # See {Google::Ads::GoogleAds::V3::Services::MutateJobService::Client::Configuration}
              # for a description of the configuration fields.
              #
              # @yield [config] Configure the Client client.
              # @yieldparam config [Client::Configuration]
              #
              # @return [Client::Configuration]
              #
              def configure
                yield @config if block_given?
                @config
              end

              ##
              # Create a new MutateJobService client object.
              #
              # ## Examples
              #
              # To create a new MutateJobService client with the default
              # configuration:
              #
              #     client = Google::Ads::GoogleAds::V3::Services::MutateJobService::Client.new
              #
              # To create a new MutateJobService client with a custom
              # configuration:
              #
              #     client = Google::Ads::GoogleAds::V3::Services::MutateJobService::Client.new do |config|
              #       config.timeout = 10_000
              #     end
              #
              # @yield [config] Configure the MutateJobService client.
              # @yieldparam config [Client::Configuration]
              #
              def initialize
                # These require statements are intentionally placed here to initialize
                # the gRPC module only when it's required.
                # See https://github.com/googleapis/toolkit/issues/446
                require "gapic/grpc"
                require "google/ads/googleads/v3/services/mutate_job_service_services_pb"

                # Create the configuration object
                @config = Configuration.new Client.configure

                # Yield the configuration if needed
                yield @config if block_given?

                # Create credentials
                credentials = @config.credentials
                credentials ||= Credentials.default scope: @config.scope
                if credentials.is_a?(String) || credentials.is_a?(Hash)
                  credentials = Credentials.new credentials, scope: @config.scope
                end
                @quota_project_id = credentials.respond_to?(:quota_project_id) ? credentials.quota_project_id : nil

                @operations_client = Operations.new do |config|
                  config.credentials = credentials
                end

                @mutate_job_service_stub = Gapic::ServiceStub.new(
                  Google::Ads::GoogleAds::V3::Services::MutateJobService::Stub,
                  credentials:  credentials,
                  endpoint:     @config.endpoint,
                  channel_args: @config.channel_args,
                  interceptors: @config.interceptors
                )
              end

              # Service calls

              ##
              # Creates a mutate job.
              #
              # @overload create_mutate_job(request, options = nil)
              #   @param request [Google::Ads::GoogleAds::V3::Services::CreateMutateJobRequest | Hash]
              #     Creates a mutate job.
              #   @param options [Gapic::CallOptions, Hash]
              #     Overrides the default settings for this call, e.g, timeout, retries, etc. Optional.
              #
              # @overload create_mutate_job(customer_id: nil)
              #   @param customer_id [String]
              #     Required. The ID of the customer for which to create a mutate job.
              #
              #
              # @yield [response, operation] Access the result along with the RPC operation
              # @yieldparam response [Google::Ads::GoogleAds::V3::Services::CreateMutateJobResponse]
              # @yieldparam operation [GRPC::ActiveCall::Operation]
              #
              # @return [Google::Ads::GoogleAds::V3::Services::CreateMutateJobResponse]
              #
              # @raise [GRPC::BadStatus] if the RPC is aborted.
              #
              def create_mutate_job request, options = nil
                raise ArgumentError, "request must be provided" if request.nil?

                request = Gapic::Protobuf.coerce request, to: Google::Ads::GoogleAds::V3::Services::CreateMutateJobRequest

                # Converts hash and nil to an options object
                options = Gapic::CallOptions.new options.to_h if options.respond_to? :to_h

                # Customize the options with defaults
                metadata = @config.rpcs.create_mutate_job.metadata.to_h

                # Set x-goog-api-client and x-goog-user-project headers
                metadata[:"x-goog-api-client"] ||= Gapic::Headers.x_goog_api_client \
                  lib_name: @config.lib_name, lib_version: @config.lib_version,
                  gapic_version: ::Testing::AdsStuff::VERSION
                metadata[:"x-goog-user-project"] = @quota_project_id if @quota_project_id

                header_params = {
                  "customer_id" => request.customer_id
                }
                request_params_header = header_params.map { |k, v| "#{k}=#{v}" }.join("&")
                metadata[:"x-goog-request-params"] ||= request_params_header

                options.apply_defaults timeout:      @config.rpcs.create_mutate_job.timeout,
                                       metadata:     metadata,
                                       retry_policy: @config.rpcs.create_mutate_job.retry_policy
                options.apply_defaults metadata:     @config.metadata,
                                       retry_policy: @config.retry_policy

                @mutate_job_service_stub.call_rpc :create_mutate_job, request, options: options do |response, operation|
                  yield response, operation if block_given?
                  return response
                end
              end

              ##
              # Returns the mutate job.
              #
              # @overload get_mutate_job(request, options = nil)
              #   @param request [Google::Ads::GoogleAds::V3::Services::GetMutateJobRequest | Hash]
              #     Returns the mutate job.
              #   @param options [Gapic::CallOptions, Hash]
              #     Overrides the default settings for this call, e.g, timeout, retries, etc. Optional.
              #
              # @overload get_mutate_job(resource_name: nil)
              #   @param resource_name [String]
              #     Required. The resource name of the MutateJob to get.
              #
              #
              # @yield [response, operation] Access the result along with the RPC operation
              # @yieldparam response [Google::Ads::GoogleAds::V3::Resources::MutateJob]
              # @yieldparam operation [GRPC::ActiveCall::Operation]
              #
              # @return [Google::Ads::GoogleAds::V3::Resources::MutateJob]
              #
              # @raise [GRPC::BadStatus] if the RPC is aborted.
              #
              def get_mutate_job request, options = nil
                raise ArgumentError, "request must be provided" if request.nil?

                request = Gapic::Protobuf.coerce request, to: Google::Ads::GoogleAds::V3::Services::GetMutateJobRequest

                # Converts hash and nil to an options object
                options = Gapic::CallOptions.new options.to_h if options.respond_to? :to_h

                # Customize the options with defaults
                metadata = @config.rpcs.get_mutate_job.metadata.to_h

                # Set x-goog-api-client and x-goog-user-project headers
                metadata[:"x-goog-api-client"] ||= Gapic::Headers.x_goog_api_client \
                  lib_name: @config.lib_name, lib_version: @config.lib_version,
                  gapic_version: ::Testing::AdsStuff::VERSION
                metadata[:"x-goog-user-project"] = @quota_project_id if @quota_project_id

                header_params = {
                  "resource_name" => request.resource_name
                }
                request_params_header = header_params.map { |k, v| "#{k}=#{v}" }.join("&")
                metadata[:"x-goog-request-params"] ||= request_params_header

                options.apply_defaults timeout:      @config.rpcs.get_mutate_job.timeout,
                                       metadata:     metadata,
                                       retry_policy: @config.rpcs.get_mutate_job.retry_policy
                options.apply_defaults metadata:     @config.metadata,
                                       retry_policy: @config.retry_policy

                @mutate_job_service_stub.call_rpc :get_mutate_job, request, options: options do |response, operation|
                  yield response, operation if block_given?
                  return response
                end
              end

              ##
              # Returns the results of the mutate job. The job must be done.
              # Supports standard list paging.
              #
              # @overload list_mutate_job_results(request, options = nil)
              #   @param request [Google::Ads::GoogleAds::V3::Services::ListMutateJobResultsRequest | Hash]
              #     Returns the results of the mutate job. The job must be done.
              #     Supports standard list paging.
              #   @param options [Gapic::CallOptions, Hash]
              #     Overrides the default settings for this call, e.g, timeout, retries, etc. Optional.
              #
              # @overload list_mutate_job_results(resource_name: nil, page_token: nil, page_size: nil)
              #   @param resource_name [String]
              #     Required. The resource name of the MutateJob whose results are being listed.
              #   @param page_token [String]
              #     Token of the page to retrieve. If not specified, the first
              #     page of results will be returned. Use the value obtained from
              #     `next_page_token` in the previous response in order to request
              #     the next page of results.
              #   @param page_size [Integer]
              #     Number of elements to retrieve in a single page.
              #     When a page request is too large, the server may decide to
              #     further limit the number of returned resources.
              #
              #
              # @yield [response, operation] Access the result along with the RPC operation
              # @yieldparam response [Gapic::PagedEnumerable<Google::Ads::GoogleAds::V3::Services::MutateJobResult>]
              # @yieldparam operation [GRPC::ActiveCall::Operation]
              #
              # @return [Gapic::PagedEnumerable<Google::Ads::GoogleAds::V3::Services::MutateJobResult>]
              #
              # @raise [GRPC::BadStatus] if the RPC is aborted.
              #
              def list_mutate_job_results request, options = nil
                raise ArgumentError, "request must be provided" if request.nil?

                request = Gapic::Protobuf.coerce request, to: Google::Ads::GoogleAds::V3::Services::ListMutateJobResultsRequest

                # Converts hash and nil to an options object
                options = Gapic::CallOptions.new options.to_h if options.respond_to? :to_h

                # Customize the options with defaults
                metadata = @config.rpcs.list_mutate_job_results.metadata.to_h

                # Set x-goog-api-client and x-goog-user-project headers
                metadata[:"x-goog-api-client"] ||= Gapic::Headers.x_goog_api_client \
                  lib_name: @config.lib_name, lib_version: @config.lib_version,
                  gapic_version: ::Testing::AdsStuff::VERSION
                metadata[:"x-goog-user-project"] = @quota_project_id if @quota_project_id

                header_params = {
                  "resource_name" => request.resource_name
                }
                request_params_header = header_params.map { |k, v| "#{k}=#{v}" }.join("&")
                metadata[:"x-goog-request-params"] ||= request_params_header

                options.apply_defaults timeout:      @config.rpcs.list_mutate_job_results.timeout,
                                       metadata:     metadata,
                                       retry_policy: @config.rpcs.list_mutate_job_results.retry_policy
                options.apply_defaults metadata:     @config.metadata,
                                       retry_policy: @config.retry_policy

                @mutate_job_service_stub.call_rpc :list_mutate_job_results, request, options: options do |response, operation|
                  response = Gapic::PagedEnumerable.new @mutate_job_service_stub, :list_mutate_job_results, request, response, operation, options
                  yield response, operation if block_given?
                  return response
                end
              end

              ##
              # Runs the mutate job.
              #
              # The Operation.metadata field type is MutateJobMetadata. When finished, the
              # long running operation will not contain errors or a response. Instead, use
              # ListMutateJobResults to get the results of the job.
              #
              # @overload run_mutate_job(request, options = nil)
              #   @param request [Google::Ads::GoogleAds::V3::Services::RunMutateJobRequest | Hash]
              #     Runs the mutate job.
              #
              #     The Operation.metadata field type is MutateJobMetadata. When finished, the
              #     long running operation will not contain errors or a response. Instead, use
              #     ListMutateJobResults to get the results of the job.
              #   @param options [Gapic::CallOptions, Hash]
              #     Overrides the default settings for this call, e.g, timeout, retries, etc. Optional.
              #
              # @overload run_mutate_job(resource_name: nil)
              #   @param resource_name [String]
              #     Required. The resource name of the MutateJob to run.
              #
              #
              # @yield [response, operation] Access the result along with the RPC operation
              # @yieldparam response [Gapic::Operation]
              # @yieldparam operation [GRPC::ActiveCall::Operation]
              #
              # @return [Gapic::Operation]
              #
              # @raise [GRPC::BadStatus] if the RPC is aborted.
              #
              def run_mutate_job request, options = nil
                raise ArgumentError, "request must be provided" if request.nil?

                request = Gapic::Protobuf.coerce request, to: Google::Ads::GoogleAds::V3::Services::RunMutateJobRequest

                # Converts hash and nil to an options object
                options = Gapic::CallOptions.new options.to_h if options.respond_to? :to_h

                # Customize the options with defaults
                metadata = @config.rpcs.run_mutate_job.metadata.to_h

                # Set x-goog-api-client and x-goog-user-project headers
                metadata[:"x-goog-api-client"] ||= Gapic::Headers.x_goog_api_client \
                  lib_name: @config.lib_name, lib_version: @config.lib_version,
                  gapic_version: ::Testing::AdsStuff::VERSION
                metadata[:"x-goog-user-project"] = @quota_project_id if @quota_project_id

                header_params = {
                  "resource_name" => request.resource_name
                }
                request_params_header = header_params.map { |k, v| "#{k}=#{v}" }.join("&")
                metadata[:"x-goog-request-params"] ||= request_params_header

                options.apply_defaults timeout:      @config.rpcs.run_mutate_job.timeout,
                                       metadata:     metadata,
                                       retry_policy: @config.rpcs.run_mutate_job.retry_policy
                options.apply_defaults metadata:     @config.metadata,
                                       retry_policy: @config.retry_policy

                @mutate_job_service_stub.call_rpc :run_mutate_job, request, options: options do |response, operation|
                  response = Gapic::Operation.new response, @operations_client
                  yield response, operation if block_given?
                  return response
                end
              end

              ##
              # Add operations to the mutate job.
              #
              # @overload add_mutate_job_operations(request, options = nil)
              #   @param request [Google::Ads::GoogleAds::V3::Services::AddMutateJobOperationsRequest | Hash]
              #     Add operations to the mutate job.
              #   @param options [Gapic::CallOptions, Hash]
              #     Overrides the default settings for this call, e.g, timeout, retries, etc. Optional.
              #
              # @overload add_mutate_job_operations(resource_name: nil, sequence_token: nil, mutate_operations: nil)
              #   @param resource_name [String]
              #     Required. The resource name of the MutateJob.
              #   @param sequence_token [String]
              #     A token used to enforce sequencing.
              #
              #     The first AddMutateJobOperations request for a MutateJob should not set
              #     sequence_token. Subsequent requests must set sequence_token to the value of
              #     next_sequence_token received in the previous AddMutateJobOperations
              #     response.
              #   @param mutate_operations [Array<Google::Ads::GoogleAds::V3::Services::MutateOperation | Hash>]
              #     Required. The list of mutates being added.
              #
              #     Operations can use negative integers as temp ids to signify dependencies
              #     between entities created in this MutateJob. For example, a customer with
              #     id = 1234 can create a campaign and an ad group in that same campaign by
              #     creating a campaign in the first operation with the resource name
              #     explicitly set to "customers/1234/campaigns/-1", and creating an ad group
              #     in the second operation with the campaign field also set to
              #     "customers/1234/campaigns/-1".
              #
              #
              # @yield [response, operation] Access the result along with the RPC operation
              # @yieldparam response [Google::Ads::GoogleAds::V3::Services::AddMutateJobOperationsResponse]
              # @yieldparam operation [GRPC::ActiveCall::Operation]
              #
              # @return [Google::Ads::GoogleAds::V3::Services::AddMutateJobOperationsResponse]
              #
              # @raise [GRPC::BadStatus] if the RPC is aborted.
              #
              def add_mutate_job_operations request, options = nil
                raise ArgumentError, "request must be provided" if request.nil?

                request = Gapic::Protobuf.coerce request, to: Google::Ads::GoogleAds::V3::Services::AddMutateJobOperationsRequest

                # Converts hash and nil to an options object
                options = Gapic::CallOptions.new options.to_h if options.respond_to? :to_h

                # Customize the options with defaults
                metadata = @config.rpcs.add_mutate_job_operations.metadata.to_h

                # Set x-goog-api-client and x-goog-user-project headers
                metadata[:"x-goog-api-client"] ||= Gapic::Headers.x_goog_api_client \
                  lib_name: @config.lib_name, lib_version: @config.lib_version,
                  gapic_version: ::Testing::AdsStuff::VERSION
                metadata[:"x-goog-user-project"] = @quota_project_id if @quota_project_id

                header_params = {
                  "resource_name" => request.resource_name
                }
                request_params_header = header_params.map { |k, v| "#{k}=#{v}" }.join("&")
                metadata[:"x-goog-request-params"] ||= request_params_header

                options.apply_defaults timeout:      @config.rpcs.add_mutate_job_operations.timeout,
                                       metadata:     metadata,
                                       retry_policy: @config.rpcs.add_mutate_job_operations.retry_policy
                options.apply_defaults metadata:     @config.metadata,
                                       retry_policy: @config.retry_policy

                @mutate_job_service_stub.call_rpc :add_mutate_job_operations, request, options: options do |response, operation|
                  yield response, operation if block_given?
                  return response
                end
              end

              ##
              # Configuration class for the MutateJobService API.
              #
              # This class represents the configuration for MutateJobService,
              # providing control over timeouts, retry behavior, logging, transport
              # parameters, and other low-level controls. Certain parameters can also be
              # applied individually to specific RPCs. See
              # {Google::Ads::GoogleAds::V3::Services::MutateJobService::Client::Configuration::Rpcs}
              # for a list of RPCs that can be configured independently.
              #
              # Configuration can be applied globally to all clients, or to a single client
              # on construction.
              #
              # # Examples
              #
              # To modify the global config, setting the timeout for create_mutate_job
              # to 20 seconds, and all remaining timeouts to 10 seconds:
              #
              #     Google::Ads::GoogleAds::V3::Services::MutateJobService::Client.configure do |config|
              #       config.timeout = 10_000
              #       config.rpcs.create_mutate_job.timeout = 20_000
              #     end
              #
              # To apply the above configuration only to a new client:
              #
              #     client = Google::Ads::GoogleAds::V3::Services::MutateJobService::Client.new do |config|
              #       config.timeout = 10_000
              #       config.rpcs.create_mutate_job.timeout = 20_000
              #     end
              #
              # @!attribute [rw] endpoint
              #   The hostname or hostname:port of the service endpoint.
              #   Defaults to `"googleads.googleapis.com"`.
              #   @return [String]
              # @!attribute [rw] credentials
              #   Credentials to send with calls. You may provide any of the following types:
              #    *  (`String`) The path to a service account key file in JSON format
              #    *  (`Hash`) A service account key as a Hash
              #    *  (`Google::Auth::Credentials`) A googleauth credentials object
              #       (see the [googleauth docs](https://googleapis.dev/ruby/googleauth/latest/index.html))
              #    *  (`Signet::OAuth2::Client`) A signet oauth2 client object
              #       (see the [signet docs](https://googleapis.dev/ruby/signet/latest/Signet/OAuth2/Client.html))
              #    *  (`GRPC::Core::Channel`) a gRPC channel with included credentials
              #    *  (`GRPC::Core::ChannelCredentials`) a gRPC credentails object
              #    *  (`nil`) indicating no credentials
              #   @return [Object]
              # @!attribute [rw] scope
              #   The OAuth scopes
              #   @return [Array<String>]
              # @!attribute [rw] lib_name
              #   The library name as recorded in instrumentation and logging
              #   @return [String]
              # @!attribute [rw] lib_version
              #   The library version as recorded in instrumentation and logging
              #   @return [String]
              # @!attribute [rw] channel_args
              #   Extra parameters passed to the gRPC channel. Note: this is ignored if a
              #   `GRPC::Core::Channel` object is provided as the credential.
              #   @return [Hash]
              # @!attribute [rw] interceptors
              #   An array of interceptors that are run before calls are executed.
              #   @return [Array<GRPC::ClientInterceptor>]
              # @!attribute [rw] timeout
              #   The call timeout in milliseconds.
              #   @return [Numeric]
              # @!attribute [rw] metadata
              #   Additional gRPC headers to be sent with the call.
              #   @return [Hash{Symbol=>String}]
              # @!attribute [rw] retry_policy
              #   The retry policy. The value is a hash with the following keys:
              #    *  `:initial_delay` (*type:* `Numeric`) - The initial delay in seconds.
              #    *  `:max_delay` (*type:* `Numeric`) - The max delay in seconds.
              #    *  `:multiplier` (*type:* `Numeric`) - The incremental backoff multiplier.
              #    *  `:retry_codes` (*type:* `Array<String>`) - The error codes that should
              #       trigger a retry.
              #   @return [Hash]
              #
              class Configuration
                extend Gapic::Config

                config_attr :endpoint,     "googleads.googleapis.com", String
                config_attr :credentials,  nil do |value|
                  allowed = [::String, ::Hash, ::Proc, ::Google::Auth::Credentials, ::Signet::OAuth2::Client, nil]
                  allowed += [::GRPC::Core::Channel, ::GRPC::Core::ChannelCredentials] if defined? ::GRPC
                  allowed.any? { |klass| klass === value }
                end
                config_attr :scope,        nil, String, Array, nil
                config_attr :lib_name,     nil, String, nil
                config_attr :lib_version,  nil, String, nil
                config_attr(:channel_args, { "grpc.service_config_disable_resolution"=>1 }, Hash, nil)
                config_attr :interceptors, nil, Array, nil
                config_attr :timeout,      nil, Numeric, nil
                config_attr :metadata,     nil, Hash, nil
                config_attr :retry_policy, nil, Hash, Proc, nil

                # @private
                def initialize parent_config = nil
                  @parent_config = parent_config unless parent_config.nil?

                  yield self if block_given?
                end

                ##
                # Configurations for individual RPCs
                # @return [Rpcs]
                #
                def rpcs
                  @rpcs ||= begin
                    parent_rpcs = nil
                    parent_rpcs = @parent_config.rpcs if @parent_config&.respond_to? :rpcs
                    Rpcs.new parent_rpcs
                  end
                end

                ##
                # Configuration RPC class for the MutateJobService API.
                #
                # Includes fields providing the configuration for each RPC in this service.
                # Each configuration object is of type `Gapic::Config::Method` and includes
                # the following configuration fields:
                #
                #  *  `timeout` (*type:* `Numeric`) - The call timeout in milliseconds
                #  *  `metadata` (*type:* `Hash{Symbol=>String}`) - Additional gRPC headers
                #  *  `retry_policy (*type:* `Hash`) - The retry policy. The policy fields
                #     include the following keys:
                #      *  `:initial_delay` (*type:* `Numeric`) - The initial delay in seconds.
                #      *  `:max_delay` (*type:* `Numeric`) - The max delay in seconds.
                #      *  `:multiplier` (*type:* `Numeric`) - The incremental backoff multiplier.
                #      *  `:retry_codes` (*type:* `Array<String>`) - The error codes that should
                #         trigger a retry.
                #
                class Rpcs
                  ##
                  # RPC-specific configuration for `create_mutate_job`
                  # @return [Gapic::Config::Method]
                  #
                  attr_reader :create_mutate_job
                  ##
                  # RPC-specific configuration for `get_mutate_job`
                  # @return [Gapic::Config::Method]
                  #
                  attr_reader :get_mutate_job
                  ##
                  # RPC-specific configuration for `list_mutate_job_results`
                  # @return [Gapic::Config::Method]
                  #
                  attr_reader :list_mutate_job_results
                  ##
                  # RPC-specific configuration for `run_mutate_job`
                  # @return [Gapic::Config::Method]
                  #
                  attr_reader :run_mutate_job
                  ##
                  # RPC-specific configuration for `add_mutate_job_operations`
                  # @return [Gapic::Config::Method]
                  #
                  attr_reader :add_mutate_job_operations

                  # @private
                  def initialize parent_rpcs = nil
                    create_mutate_job_config = parent_rpcs&.create_mutate_job if parent_rpcs&.respond_to? :create_mutate_job
                    @create_mutate_job = Gapic::Config::Method.new create_mutate_job_config
                    get_mutate_job_config = parent_rpcs&.get_mutate_job if parent_rpcs&.respond_to? :get_mutate_job
                    @get_mutate_job = Gapic::Config::Method.new get_mutate_job_config
                    list_mutate_job_results_config = parent_rpcs&.list_mutate_job_results if parent_rpcs&.respond_to? :list_mutate_job_results
                    @list_mutate_job_results = Gapic::Config::Method.new list_mutate_job_results_config
                    run_mutate_job_config = parent_rpcs&.run_mutate_job if parent_rpcs&.respond_to? :run_mutate_job
                    @run_mutate_job = Gapic::Config::Method.new run_mutate_job_config
                    add_mutate_job_operations_config = parent_rpcs&.add_mutate_job_operations if parent_rpcs&.respond_to? :add_mutate_job_operations
                    @add_mutate_job_operations = Gapic::Config::Method.new add_mutate_job_operations_config

                    yield self if block_given?
                  end
                end
              end
            end
          end
        end
      end
    end
  end
end

# rubocop:disable Lint/HandleExceptions

# Once client is loaded, load helpers.rb if it exists.
begin
  require "google/ads/google_ads/v3/services/mutate_job_service/helpers"
rescue LoadError
end

# rubocop:enable Lint/HandleExceptions
