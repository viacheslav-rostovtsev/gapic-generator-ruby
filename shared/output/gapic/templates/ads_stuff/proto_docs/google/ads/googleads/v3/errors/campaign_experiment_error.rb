# frozen_string_literal: true

# The MIT License (MIT)
#
# Copyright <YEAR> <COPYRIGHT HOLDER>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

# Auto-generated by gapic-generator-ruby. DO NOT EDIT!


module Google
  module Ads
    module GoogleAds
      module V3
        module Errors
          # Container for enum describing possible campaign experiment errors.
          class CampaignExperimentErrorEnum
            include Google::Protobuf::MessageExts
            extend Google::Protobuf::MessageExts::ClassMethods

            # Enum describing possible campaign experiment errors.
            module CampaignExperimentError
              # Enum unspecified.
              UNSPECIFIED = 0

              # The received error code is not known in this version.
              UNKNOWN = 1

              # An active campaign or experiment with this name already exists.
              DUPLICATE_NAME = 2

              # Experiment cannot be updated from the current state to the
              # requested target state. For example, an experiment can only graduate
              # if its status is ENABLED.
              INVALID_TRANSITION = 3

              # Cannot create an experiment from a campaign using an explicitly shared
              # budget.
              CANNOT_CREATE_EXPERIMENT_WITH_SHARED_BUDGET = 4

              # Cannot create an experiment for a removed base campaign.
              CANNOT_CREATE_EXPERIMENT_FOR_REMOVED_BASE_CAMPAIGN = 5

              # Cannot create an experiment from a draft, which has a status other than
              # proposed.
              CANNOT_CREATE_EXPERIMENT_FOR_NON_PROPOSED_DRAFT = 6

              # This customer is not allowed to create an experiment.
              CUSTOMER_CANNOT_CREATE_EXPERIMENT = 7

              # This campaign is not allowed to create an experiment.
              CAMPAIGN_CANNOT_CREATE_EXPERIMENT = 8

              # Trying to set an experiment duration which overlaps with another
              # experiment.
              EXPERIMENT_DURATIONS_MUST_NOT_OVERLAP = 9

              # All non-removed experiments must start and end within their campaign's
              # duration.
              EXPERIMENT_DURATION_MUST_BE_WITHIN_CAMPAIGN_DURATION = 10

              # The experiment cannot be modified because its status is in a terminal
              # state, such as REMOVED.
              CANNOT_MUTATE_EXPERIMENT_DUE_TO_STATUS = 11
            end
          end
        end
      end
    end
  end
end
