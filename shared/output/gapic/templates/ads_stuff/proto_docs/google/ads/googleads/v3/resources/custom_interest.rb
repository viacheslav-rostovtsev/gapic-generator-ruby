# frozen_string_literal: true

# The MIT License (MIT)
#
# Copyright <YEAR> <COPYRIGHT HOLDER>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

# Auto-generated by gapic-generator-ruby. DO NOT EDIT!


module Google
  module Ads
    module GoogleAds
      module V3
        module Resources
          # A custom interest. This is a list of users by interest.
          # @!attribute [rw] resource_name
          #   @return [String]
          #     Immutable. The resource name of the custom interest.
          #     Custom interest resource names have the form:
          #
          #     `customers/{customer_id}/customInterests/{custom_interest_id}`
          # @!attribute [r] id
          #   @return [Google::Protobuf::Int64Value]
          #     Output only. Id of the custom interest.
          # @!attribute [rw] status
          #   @return [Google::Ads::GoogleAds::V3::Enums::CustomInterestStatusEnum::CustomInterestStatus]
          #     Status of this custom interest. Indicates whether the custom interest is
          #     enabled or removed.
          # @!attribute [rw] name
          #   @return [Google::Protobuf::StringValue]
          #     Name of the custom interest. It should be unique across the same custom
          #     affinity audience.
          #     This field is required for create operations.
          # @!attribute [rw] type
          #   @return [Google::Ads::GoogleAds::V3::Enums::CustomInterestTypeEnum::CustomInterestType]
          #     Type of the custom interest, CUSTOM_AFFINITY or CUSTOM_INTENT.
          #     By default the type is set to CUSTOM_AFFINITY.
          # @!attribute [rw] description
          #   @return [Google::Protobuf::StringValue]
          #     Description of this custom interest audience.
          # @!attribute [rw] members
          #   @return [Array<Google::Ads::GoogleAds::V3::Resources::CustomInterestMember>]
          #     List of custom interest members that this custom interest is composed of.
          #     Members can be added during CustomInterest creation. If members are
          #     presented in UPDATE operation, existing members will be overridden.
          class CustomInterest
            include Google::Protobuf::MessageExts
            extend Google::Protobuf::MessageExts::ClassMethods
          end

          # A member of custom interest audience. A member can be a keyword or url.
          # It is immutable, that is, it can only be created or removed but not changed.
          # @!attribute [rw] member_type
          #   @return [Google::Ads::GoogleAds::V3::Enums::CustomInterestMemberTypeEnum::CustomInterestMemberType]
          #     The type of custom interest member, KEYWORD or URL.
          # @!attribute [rw] parameter
          #   @return [Google::Protobuf::StringValue]
          #     Keyword text when member_type is KEYWORD or URL string when
          #     member_type is URL.
          class CustomInterestMember
            include Google::Protobuf::MessageExts
            extend Google::Protobuf::MessageExts::ClassMethods
          end
        end
      end
    end
  end
end
