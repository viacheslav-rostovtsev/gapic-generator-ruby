# frozen_string_literal: true

# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Auto-generated by gapic-generator-ruby. DO NOT EDIT!


module Google
  module Ads
    module GoogleAds
      module V3
        module Resources
          # A Keyword Plan negative keyword.
          # Max number of keyword plan negative keywords per plan: 1000.
          # @!attribute [rw] resource_name
          #   @return [String]
          #     Immutable. The resource name of the Keyword Plan negative keyword.
          #     KeywordPlanNegativeKeyword resource names have the form:
          #
          #     `customers/{customer_id}/keywordPlanNegativeKeywords/{kp_negative_keyword_id}`
          # @!attribute [rw] keyword_plan_campaign
          #   @return [Google::Protobuf::StringValue]
          #     The Keyword Plan campaign to which this negative keyword belongs.
          # @!attribute [r] id
          #   @return [Google::Protobuf::Int64Value]
          #     Output only. The ID of the Keyword Plan negative keyword.
          # @!attribute [rw] text
          #   @return [Google::Protobuf::StringValue]
          #     The keyword text.
          # @!attribute [rw] match_type
          #   @return [Google::Ads::GoogleAds::V3::Enums::KeywordMatchTypeEnum::KeywordMatchType]
          #     The keyword match type.
          class KeywordPlanNegativeKeyword
            include Google::Protobuf::MessageExts
            extend Google::Protobuf::MessageExts::ClassMethods
          end
        end
      end
    end
  end
end
